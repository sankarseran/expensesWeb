/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { Expense } from "./components/add-expenses/type";
export namespace Components {
    interface AddExpenses {
        "editExpense": Expense;
    }
    interface AppHeader {
        "name": string;
    }
    interface AppHome {
    }
    interface AppRoot {
    }
    interface AppThemeSwitch {
    }
    interface ExpensesChart {
        "expenses": Expense[];
    }
    interface ExpensesList {
    }
    interface ExpensesListItem {
        "expenseItem": Expense;
    }
}
declare global {
    interface HTMLAddExpensesElement extends Components.AddExpenses, HTMLStencilElement {
    }
    var HTMLAddExpensesElement: {
        prototype: HTMLAddExpensesElement;
        new (): HTMLAddExpensesElement;
    };
    interface HTMLAppHeaderElement extends Components.AppHeader, HTMLStencilElement {
    }
    var HTMLAppHeaderElement: {
        prototype: HTMLAppHeaderElement;
        new (): HTMLAppHeaderElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLAppThemeSwitchElement extends Components.AppThemeSwitch, HTMLStencilElement {
    }
    var HTMLAppThemeSwitchElement: {
        prototype: HTMLAppThemeSwitchElement;
        new (): HTMLAppThemeSwitchElement;
    };
    interface HTMLExpensesChartElement extends Components.ExpensesChart, HTMLStencilElement {
    }
    var HTMLExpensesChartElement: {
        prototype: HTMLExpensesChartElement;
        new (): HTMLExpensesChartElement;
    };
    interface HTMLExpensesListElement extends Components.ExpensesList, HTMLStencilElement {
    }
    var HTMLExpensesListElement: {
        prototype: HTMLExpensesListElement;
        new (): HTMLExpensesListElement;
    };
    interface HTMLExpensesListItemElement extends Components.ExpensesListItem, HTMLStencilElement {
    }
    var HTMLExpensesListItemElement: {
        prototype: HTMLExpensesListItemElement;
        new (): HTMLExpensesListItemElement;
    };
    interface HTMLElementTagNameMap {
        "add-expenses": HTMLAddExpensesElement;
        "app-header": HTMLAppHeaderElement;
        "app-home": HTMLAppHomeElement;
        "app-root": HTMLAppRootElement;
        "app-theme-switch": HTMLAppThemeSwitchElement;
        "expenses-chart": HTMLExpensesChartElement;
        "expenses-list": HTMLExpensesListElement;
        "expenses-list-item": HTMLExpensesListItemElement;
    }
}
declare namespace LocalJSX {
    interface AddExpenses {
        "editExpense"?: Expense;
        "onExpenseAddedOrUpdated"?: (event: CustomEvent<{
    type: 'edit' | 'add';
    data: Expense;
  }>) => void;
    }
    interface AppHeader {
        "name"?: string;
    }
    interface AppHome {
    }
    interface AppRoot {
    }
    interface AppThemeSwitch {
    }
    interface ExpensesChart {
        "expenses"?: Expense[];
    }
    interface ExpensesList {
    }
    interface ExpensesListItem {
        "expenseItem"?: Expense;
    }
    interface IntrinsicElements {
        "add-expenses": AddExpenses;
        "app-header": AppHeader;
        "app-home": AppHome;
        "app-root": AppRoot;
        "app-theme-switch": AppThemeSwitch;
        "expenses-chart": ExpensesChart;
        "expenses-list": ExpensesList;
        "expenses-list-item": ExpensesListItem;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "add-expenses": LocalJSX.AddExpenses & JSXBase.HTMLAttributes<HTMLAddExpensesElement>;
            "app-header": LocalJSX.AppHeader & JSXBase.HTMLAttributes<HTMLAppHeaderElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "app-theme-switch": LocalJSX.AppThemeSwitch & JSXBase.HTMLAttributes<HTMLAppThemeSwitchElement>;
            "expenses-chart": LocalJSX.ExpensesChart & JSXBase.HTMLAttributes<HTMLExpensesChartElement>;
            "expenses-list": LocalJSX.ExpensesList & JSXBase.HTMLAttributes<HTMLExpensesListElement>;
            "expenses-list-item": LocalJSX.ExpensesListItem & JSXBase.HTMLAttributes<HTMLExpensesListItemElement>;
        }
    }
}
